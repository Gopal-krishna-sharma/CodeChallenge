<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="4" total="9" passed="3" failed="2" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2022-10-01T16:02:54 IST" name="Default suite" finished-at="2022-10-01T16:03:21 IST" duration-ms="26935">
    <groups>
    </groups>
    <test started-at="2022-10-01T16:02:54 IST" name="Default test" finished-at="2022-10-01T16:03:21 IST" duration-ms="26935">
      <class name="testClasses.TestClass">
        <test-method is-config="true" signature="beforeSuite()[pri:0, instance:testClasses.TestClass@5386659f]" started-at="2022-10-01T16:02:54 IST" name="beforeSuite" finished-at="2022-10-01T16:02:54 IST" duration-ms="15" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeSuite -->
        <test-method is-config="true" signature="beforeTest()[pri:0, instance:testClasses.TestClass@5386659f]" started-at="2022-10-01T16:02:54 IST" name="beforeTest" finished-at="2022-10-01T16:02:58 IST" duration-ms="4124" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeTest -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testClasses.TestClass@5386659f]" started-at="2022-10-01T16:02:58 IST" name="beforeMethod" finished-at="2022-10-01T16:02:58 IST" duration-ms="5" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testClasses.TestClass.AppLogin() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="AppLogin()[pri:1, instance:testClasses.TestClass@5386659f]" started-at="2022-10-01T16:02:58 IST" name="AppLogin" finished-at="2022-10-01T16:03:00 IST" duration-ms="1447" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- AppLogin -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.TestClass@5386659f]" started-at="2022-10-01T16:03:00 IST" name="afterMethod" finished-at="2022-10-01T16:03:00 IST" duration-ms="4" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=AppLogin status=SUCCESS method=TestClass.AppLogin()[pri:1, instance:testClasses.TestClass@5386659f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testClasses.TestClass@5386659f]" started-at="2022-10-01T16:03:00 IST" name="beforeMethod" finished-at="2022-10-01T16:03:00 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testClasses.TestClass.NavToInventory()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="NavToInventory()[pri:2, instance:testClasses.TestClass@5386659f]" started-at="2022-10-01T16:03:00 IST" name="NavToInventory" finished-at="2022-10-01T16:03:00 IST" duration-ms="1" status="FAIL">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at pageObjects.LandingPageObjects.NavToInventory(LandingPageObjects.java:57)
at testClasses.TestClass.NavToInventory(TestClass.java:23)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavToInventory -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.TestClass@5386659f]" started-at="2022-10-01T16:03:00 IST" name="afterMethod" finished-at="2022-10-01T16:03:00 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=NavToInventory status=FAILURE method=TestClass.NavToInventory()[pri:2, instance:testClasses.TestClass@5386659f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="CreateProduct()[pri:3, instance:testClasses.TestClass@5386659f]" started-at="2022-10-01T16:03:00 IST" name="CreateProduct" finished-at="2022-10-01T16:03:21 IST" duration-ms="20920" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateProduct -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testClasses.TestClass@5386659f]" started-at="2022-10-01T16:03:00 IST" name="beforeMethod" finished-at="2022-10-01T16:03:00 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testClasses.TestClass.CreateProduct()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.TestClass@5386659f]" started-at="2022-10-01T16:03:21 IST" name="afterMethod" finished-at="2022-10-01T16:03:21 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CreateProduct status=SUCCESS method=TestClass.CreateProduct()[pri:3, instance:testClasses.TestClass@5386659f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method signature="NavToManufacturing()[pri:4, instance:testClasses.TestClass@5386659f]" started-at="2022-10-01T16:03:21 IST" name="NavToManufacturing" finished-at="2022-10-01T16:03:21 IST" duration-ms="1" status="FAIL">
          <exception class="java.lang.NullPointerException">
            <full-stacktrace>
              <![CDATA[java.lang.NullPointerException
at pageObjects.LandingPageObjects.NavToManufacturing(LandingPageObjects.java:66)
at testClasses.TestClass.NavToManufacturing(TestClass.java:39)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
at java.base/java.lang.reflect.Method.invoke(Method.java:566)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:677)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:221)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:962)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:194)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1541)
at org.testng.TestRunner.privateRun(TestRunner.java:806)
at org.testng.TestRunner.run(TestRunner.java:601)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:433)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:427)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:387)
at org.testng.SuiteRunner.run(SuiteRunner.java:330)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1256)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1176)
at org.testng.TestNG.runSuites(TestNG.java:1099)
at org.testng.TestNG.run(TestNG.java:1067)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:115)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.NullPointerException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- NavToManufacturing -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testClasses.TestClass@5386659f]" started-at="2022-10-01T16:03:21 IST" name="beforeMethod" finished-at="2022-10-01T16:03:21 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testClasses.TestClass.NavToManufacturing()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method signature="CreateManufacturingOrder()[pri:5, instance:testClasses.TestClass@5386659f]" started-at="2022-10-01T16:03:21 IST" name="CreateManufacturingOrder" finished-at="2022-10-01T16:03:21 IST" duration-ms="102" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- CreateManufacturingOrder -->
        <test-method is-config="true" signature="beforeMethod(java.lang.reflect.Method)[pri:0, instance:testClasses.TestClass@5386659f]" started-at="2022-10-01T16:03:21 IST" name="beforeMethod" finished-at="2022-10-01T16:03:21 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void testClasses.TestClass.CreateManufacturingOrder()]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.TestClass@5386659f]" started-at="2022-10-01T16:03:21 IST" name="afterMethod" finished-at="2022-10-01T16:03:21 IST" duration-ms="0" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=NavToManufacturing status=FAILURE method=TestClass.NavToManufacturing()[pri:4, instance:testClasses.TestClass@5386659f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:testClasses.TestClass@5386659f]" started-at="2022-10-01T16:03:21 IST" name="afterMethod" finished-at="2022-10-01T16:03:21 IST" duration-ms="1" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=CreateManufacturingOrder status=SUCCESS method=TestClass.CreateManufacturingOrder()[pri:5, instance:testClasses.TestClass@5386659f] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method is-config="true" signature="afterTest()[pri:0, instance:testClasses.TestClass@5386659f]" started-at="2022-10-01T16:03:21 IST" name="afterTest" finished-at="2022-10-01T16:03:21 IST" duration-ms="297" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterTest -->
        <test-method is-config="true" signature="afterSuite()[pri:0, instance:testClasses.TestClass@5386659f]" started-at="2022-10-01T16:03:21 IST" name="afterSuite" finished-at="2022-10-01T16:03:22 IST" duration-ms="702" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterSuite -->
      </class> <!-- testClasses.TestClass -->
    </test> <!-- Default test -->
  </suite> <!-- Default suite -->
</testng-results>
